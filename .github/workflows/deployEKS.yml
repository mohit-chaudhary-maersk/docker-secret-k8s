# This is a basic workflow to help you get started with Actions

name: eks-deployment

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Setup Maven
  # You may pin to the exact commit or the version.
  # uses: stCarolas/setup-maven@3e6546c9996062b4f4696c96b272215bd4c888b8
        uses: stCarolas/setup-maven@v4.3
        with:
          # Version Spec of the version to use.  Examples: 10.x, 10.15.1, >=10.15.0
          maven-version: 3.8.2
          
      - name: Build with maven
        run: mvn clean install
        
      - name: Docker build
        run: docker build -t docker-secret-k8s'${{github.sha}}' .
        
      - name: Docker Login
        run: docker login --username '${{secrets.DOCKER_LOGIN}}' --password '${{secrets.DOCKER_PASSWORD}}'
        
      - name: Docker Image tag
        run: docker tag docker-secret-k8s'${{github.sha}}' '${{secrets.DOCKER_LOGIN}}'/docker-secret-k8s'${{github.sha}}'
        
      - name: Push Docker image
        run: docker push '${{secrets.DOCKER_LOGIN}}'/docker-secret-k8s'${{github.sha}}'
        
      - name: Azure Login
        uses: Azure/login@v1.4.0
        with:
          # Paste output of `az ad sp create-for-rbac` as value of secret variable: AZURE_CREDENTIALS
          creds: ${{secrets.AZURE_CREDENTIALS}}
          # ClientId of the Azure Service principal created.
          client-id: 525c840e-761f-4e06-aca6-cf4a623c8852
          # TenantId of the Azure Service principal created.
          tenant-id: d2a2da7c-0eba-4c15-92c0-a1a782221b05
          # Azure subscriptionId
          subscription-id: 44db8608-ff65-4582-82b7-f45104fbf1e8
          # Set this value to true to enable Azure PowerShell Login in addition to Az CLI login
          enable-AzPSSession: true
          # Set this value to true to enable support for accessing tenants without subscriptions
          allow-no-subscriptions: true

      - name: Azure Kubernetes set context
        uses: Azure/aks-set-context@v2.2
        with:
          # Resource Group Name
          resource-group: myResourceGroup
          # AKS Cluster Name
          cluster-name: myAKSCluster
          # AKS Cluster Subscription
          subscription: 44db8608-ff65-4582-82b7-f45104fbf1e8
          # Get cluster admin credentials. Values: true or false
          admin: true
          # Enables kubelogin for non-admin user scenario. Values: true or false
          use-kubelogin: false
      
      - name: Create secret in Kubernetes cluster
        uses: Azure/k8s-create-secret@v3.0
        with:
          # Choose the target Kubernetes namespace. If the namespace is not provided, the commands will run in the default namespace.
          namespace: stridemaker-ns
          # Type of Kubernetes secret. Defaults to 'kubernetes.io/dockerconfigjson'.
          secret-type: docker-registry
          # Name of the secret. You can use this secret name in the Kubernetes YAML configuration file.
          secret-name: stridemaker-ns-secret
          # Container Registry URL
          container-registry-url: https://index.docker.io/v1/
          # Container Registry user name
          container-registry-username: '${{secrets.DOCKER_LOGIN}}'
          # Container Registry password
          container-registry-password: '${{secrets.DOCKER_PASSWORD}}'
          # Container Registry email (optional even when using url,username,password)
          container-registry-email: mohitch.work@gmail.com
          
      - name: Deploy to Kubernetes cluster
        uses: Azure/k8s-deploy@v3.1
        with:
          # Choose the target Kubernetes namespace. If the namespace is not provided, the commands will run in the default namespace.
          namespace: stridemaker-ns
          # Path to the manifest files which will be used for deployment.
          manifests: deployment.yaml
          # Fully qualified resource URL of the image(s) to be used for substitutions on the manifest files Example: contosodemo.azurecr.io/helloworld:test
          images: '${{secrets.DOCKER_LOGIN}}/docker-secret-k8s${{github.sha}}'
          # Name of a docker-registry secret that has already been set up within the cluster. Each of these secret names are added under imagePullSecrets field for the workloads found in the input manifest files
          imagepullsecrets: stridemaker-ns-secret
          # deploy, promote, or reject
          action: deploy
